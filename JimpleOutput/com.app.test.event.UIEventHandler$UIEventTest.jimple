public class com.app.test.event.UIEventHandler$UIEventTest extends java.lang.Object
{

    public void <init>()
    {
        com.app.test.event.UIEventHandler$UIEventTest r0;

        r0 := @this: com.app.test.event.UIEventHandler$UIEventTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean containsListEvent(android.app.Activity)
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @parameter0: android.app.Activity;

        $z0 = r0 instanceof android.app.ListActivity;

        return $z0;
    }

    public static boolean containsPreferenceAct(android.app.Activity)
    {
        android.app.Activity r0;
        boolean $z0;

        r0 := @parameter0: android.app.Activity;

        $z0 = r0 instanceof android.preference.PreferenceActivity;

        return $z0;
    }

    public static void doUIEventFromLinkedListTest(java.util.LinkedList, java.lang.String)
    {
        java.util.LinkedList r0, r2, r3, $r6, $r7;
        java.lang.String r1;
        com.app.test.event.UIEvent r4;
        java.util.Iterator r5;
        java.lang.Object $r8;
        boolean $z0, $z3, $z4, $z5, $z6;

        r0 := @parameter0: java.util.LinkedList;

        r1 := @parameter1: java.lang.String;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r2 = $r6;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r3 = $r7;

        r5 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.app.test.event.UIEvent) $r8;

        $z0 = virtualinvoke r4.<com.app.test.event.UIEvent: boolean isJump()>();

        if $z0 == 0 goto label2;

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r4);

        goto label3;

     label2:
        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r4);

     label3:
        $z6 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label1;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("oneevent");

        if $z3 == 0 goto label4;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventOneEventStgy(java.util.LinkedList)>(r0);

        goto label6;

     label4:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("onesequence");

        if $z5 == 0 goto label5;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventOneSeqStgy(java.util.LinkedList)>(r0);

        goto label6;

     label5:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("manysequence");

        if $z4 == 0 goto label6;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventManySeqStgy(java.util.LinkedList,java.util.LinkedList)>(r2, r3);

     label6:
        return;
    }

    public static void doUIEventOneEventStgy(java.util.LinkedList)
    {
        java.util.LinkedList r0;
        double d0, $d1, $d2;
        int i0, i1;
        com.app.test.event.UIEvent r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.LinkedList;

        d0 = staticinvoke <java.lang.Math: double random()>();

        i0 = virtualinvoke r0.<java.util.LinkedList: int size()>();

        $d1 = (double) i0;

        $d2 = d0 * $d1;

        i1 = (int) $d2;

        $r2 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object get(int)>(i1);

        r1 = (com.app.test.event.UIEvent) $r2;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void handleUIEvent(com.app.test.event.UIEvent)>(r1);

        return;
    }

    public static void doUIEventOneSeqStgy(java.util.LinkedList)
    {
        java.util.LinkedList r0;
        com.app.test.event.UIEvent r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.LinkedList;

        r2 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.app.test.event.UIEvent) $r3;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void handleUIEvent(com.app.test.event.UIEvent)>(r1);

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public static void doUIEventManySeqStgy(java.util.LinkedList, java.util.LinkedList)
    {
        java.util.LinkedList r0, r1;
        byte b0;
        int i1, i2, i3, i4;
        java.util.List r2, r13, r16, r18;
        com.app.test.event.UIEvent r3, r15;
        java.lang.Object $r4, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Integer $r5, $r11;
        java.util.Iterator r12, r14, r17, r19;

        r0 := @parameter0: java.util.LinkedList;

        r1 := @parameter1: java.util.LinkedList;

        b0 = 1;

        i1 = virtualinvoke r0.<java.util.LinkedList: int size()>();

        i2 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        r2 = staticinvoke <com.app.test.MathUtil: java.util.List getNPermutation(int,int)>(b0, i2);

        r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label1:
        $r4 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.List) $r4;

        r14 = interfaceinvoke r13.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r6;

        i3 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r7 = virtualinvoke r1.<java.util.LinkedList: java.lang.Object get(int)>(i3);

        r15 = (com.app.test.event.UIEvent) $r7;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void handleUIEvent(com.app.test.event.UIEvent)>(r15);

     label3:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

     label4:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        r16 = staticinvoke <com.app.test.MathUtil: java.util.List getNPermutation(int,int)>(b0, i1);

        r17 = interfaceinvoke r16.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label5:
        $r8 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.List) $r8;

        r19 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

        goto label7;

     label6:
        $r10 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.lang.Integer) $r10;

        i4 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r9 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object get(int)>(i4);

        r3 = (com.app.test.event.UIEvent) $r9;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void handleUIEvent(com.app.test.event.UIEvent)>(r3);

     label7:
        $z3 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label6;

     label8:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label5;

        return;
    }

    public static void handleUIEvent(com.app.test.event.UIEvent)
    {
        com.app.test.event.UIEvent r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        java.lang.reflect.Method r4;
        java.lang.Class $r5;
        boolean $z0, $z1;
        android.app.Dialog $r6;
        android.view.View $r7;

        r0 := @parameter0: com.app.test.event.UIEvent;

        r1 = virtualinvoke r0.<com.app.test.event.UIEvent: java.lang.String getCallback()>();

        r2 = virtualinvoke r0.<com.app.test.event.UIEvent: java.lang.Object getListener()>();

        r3 = virtualinvoke r0.<com.app.test.event.UIEvent: java.lang.Object getUi()>();

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        r4 = staticinvoke <com.app.test.Util: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>($r5, r1);

        $z0 = r3 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r7 = (android.view.View) r3;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventAnalysis: void doViewAnalysis(java.lang.reflect.Method,android.view.View,java.lang.Object)>(r4, $r7, r2);

        goto label2;

     label1:
        $z1 = r3 instanceof android.app.Dialog;

        if $z1 == 0 goto label2;

        $r6 = (android.app.Dialog) r3;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventAnalysis: void doDialogAnalysis(java.lang.reflect.Method,android.app.Dialog,java.lang.Object)>(r4, $r6, r2);

     label2:
        return;
    }

    public static void doUIEventFromMenuTest(android.app.Activity)
    {
        android.app.Activity r0;
        java.lang.reflect.Field r1;
        android.view.Menu r2;
        android.view.MenuItem r3;
        java.lang.CharSequence r4;
        java.lang.Class $r5, $r11;
        java.lang.String $r6, $r7, $r8, $r10, $r12;
        boolean $z0, $z1, $z3;
        java.lang.StringBuilder $r9, $r13;
        java.lang.IllegalArgumentException $r14, r19;
        java.lang.IllegalAccessException $r15, r20;
        java.lang.NoSuchFieldException $r16, r21;
        java.lang.SecurityException $r17, r22;
        java.lang.Object r18;
        int i1, $i2;

        r0 := @parameter0: android.app.Activity;

     label01:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("activityMenu");

        r18 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        if r18 != null goto label03;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Menu is not used in ");

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("MENU", $r12);

     label02:
        return;

     label03:
        r2 = (android.view.Menu) r18;

        i1 = 0;

        goto label06;

     label04:
        r3 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem getItem(int)>(i1);

        r4 = interfaceinvoke r3.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        $r6 = "uTest";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label05;

        $r7 = "sTest";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label05;

        $r8 = "iTest";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 != 0 goto label05;

        virtualinvoke r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r3);

     label05:
        i1 = i1 + 1;

     label06:
        $i2 = interfaceinvoke r2.<android.view.Menu: int size()>();

        if i1 < $i2 goto label04;

     label07:
        goto label12;

     label08:
        $r14 := @caughtexception;

        r19 = $r14;

        virtualinvoke r19.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label12;

     label09:
        $r15 := @caughtexception;

        r20 = $r15;

        virtualinvoke r20.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label12;

     label10:
        $r16 := @caughtexception;

        r21 = $r16;

        virtualinvoke r21.<java.lang.NoSuchFieldException: void printStackTrace()>();

        goto label12;

     label11:
        $r17 := @caughtexception;

        r22 = $r17;

        virtualinvoke r22.<java.lang.SecurityException: void printStackTrace()>();

     label12:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label08;
        catch java.lang.IllegalArgumentException from label03 to label07 with label08;
        catch java.lang.IllegalAccessException from label01 to label02 with label09;
        catch java.lang.IllegalAccessException from label03 to label07 with label09;
        catch java.lang.NoSuchFieldException from label01 to label02 with label10;
        catch java.lang.NoSuchFieldException from label03 to label07 with label10;
        catch java.lang.SecurityException from label01 to label02 with label11;
        catch java.lang.SecurityException from label03 to label07 with label11;
    }

    public static void doUIEventFromListActTest(android.app.ListActivity)
    {
        android.app.ListActivity r0;
        java.lang.Class r1, $r6, $r7;
        android.widget.ListView r2;
        android.view.View r3;
        android.widget.ListAdapter r4;
        long l0;
        java.lang.Class[] $r5;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        java.lang.Long $r11;
        java.lang.IllegalArgumentException $r12, r19;
        java.lang.NoSuchMethodException $r13, r21;
        java.lang.SecurityException $r14, r22;
        java.lang.IllegalAccessException $r15, r18;
        java.lang.reflect.InvocationTargetException $r16, r20;
        java.lang.reflect.Method r17;
        int i1, $i2;

        r0 := @parameter0: android.app.ListActivity;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke r0.<android.app.ListActivity: android.widget.ListView getListView()>();

     label01:
        $r5 = newarray (java.lang.Class)[4];

        $r5[0] = class "android/widget/ListView";

        $r5[1] = class "android/view/View";

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        $r5[2] = $r6;

        $r7 = <java.lang.Long: java.lang.Class TYPE>;

        $r5[3] = $r7;

        r17 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("onListItemClick", $r5);

        virtualinvoke r17.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        i1 = 0;

        goto label09;

     label02:
        r3 = virtualinvoke r2.<android.widget.ListView: android.view.View getChildAt(int)>(i1);

        r4 = virtualinvoke r2.<android.widget.ListView: android.widget.ListAdapter getAdapter()>();

        l0 = interfaceinvoke r4.<android.widget.Adapter: long getItemId(int)>(i1);

     label03:
        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = r2;

        $r8[1] = r3;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r8[2] = $r9;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[3] = $r11;

        virtualinvoke r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r8);

     label04:
        goto label08;

     label05:
        $r15 := @caughtexception;

        r18 = $r15;

        virtualinvoke r18.<java.lang.IllegalAccessException: void printStackTrace()>();

        goto label08;

     label06:
        $r12 := @caughtexception;

        r19 = $r12;

        virtualinvoke r19.<java.lang.IllegalArgumentException: void printStackTrace()>();

        goto label08;

     label07:
        $r16 := @caughtexception;

        r20 = $r16;

        virtualinvoke r20.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

     label08:
        i1 = i1 + 1;

     label09:
        $i2 = virtualinvoke r2.<android.widget.ListView: int getChildCount()>();

        if i1 < $i2 goto label02;

     label10:
        goto label13;

     label11:
        $r13 := @caughtexception;

        r21 = $r13;

        virtualinvoke r21.<java.lang.NoSuchMethodException: void printStackTrace()>();

        goto label13;

     label12:
        $r14 := @caughtexception;

        r22 = $r14;

        virtualinvoke r22.<java.lang.SecurityException: void printStackTrace()>();

     label13:
        return;

        catch java.lang.IllegalAccessException from label03 to label04 with label05;
        catch java.lang.IllegalArgumentException from label03 to label04 with label06;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label07;
        catch java.lang.NoSuchMethodException from label01 to label10 with label11;
        catch java.lang.SecurityException from label01 to label10 with label12;
    }

    public static void doUIEventFromPreActTest(android.app.Activity)
    {
        android.app.Activity r0;
        android.preference.PreferenceActivity r1;
        android.preference.PreferenceScreen r2;
        android.widget.ListView r3;
        int i0, $i1, i3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: android.app.Activity;

        r1 = (android.preference.PreferenceActivity) r0;

        r2 = virtualinvoke r1.<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>();

        r3 = virtualinvoke r1.<android.preference.PreferenceActivity: android.widget.ListView getListView()>();

        i0 = virtualinvoke r3.<android.widget.ListView: int getCount()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("listView count: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" listView child size: ");

        $i1 = virtualinvoke r3.<android.widget.ListView: int getChildCount()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EVENT", $r8);

        i3 = 0;

        goto label2;

     label1:
        virtualinvoke r2.<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(r3, null, i3, 0L);

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        return;
    }
}
