public class cz.romario.opensudoku.gui.importing.OpenSudokuImportTask extends cz.romario.opensudoku.gui.importing.AbstractImportTask
{
    private android.net.Uri mUri;
    public static java.util.LinkedList methodCountList;

    public void <init>(android.net.Uri)
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        android.net.Uri $r1;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;

        $r1 := @parameter0: android.net.Uri;

        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.AbstractImportTask: void <init>()>();

        $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri> = $r1;

        methodCount = <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(0);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(0, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    private void importV1(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0, visitedCount, flagInt;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $r2 = "";

     label1:
        if $i0 != 1 goto label2;

        return;

     label2:
        if $i0 != 2 goto label4;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r2 = $r3;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("game");

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "data");

        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importGame(java.lang.String)>($r3);

     label3:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label4:
        if $i0 != 3 goto label5;

        $r2 = "";

        goto label3;

     label5:
        if $i0 != 4 goto label3;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importFolder(java.lang.String)>($r3);

        methodCount = <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(1);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label6;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(1, flagInteger);

     label6:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        goto label3;
    }

    private void importV2(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException, cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        cz.romario.opensudoku.db.SudokuImportParams $r2;
        int $i0, visitedCount, flagInt;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;
        long $l1;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;

        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $r3 = "";

        $r2 = new cz.romario.opensudoku.db.SudokuImportParams;

        specialinvoke $r2.<cz.romario.opensudoku.db.SudokuImportParams: void <init>()>();

     label1:
        if $i0 != 1 goto label2;

        return;

     label2:
        if $i0 != 2 goto label5;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = $r4;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("folder");

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "created");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r5, $l1);

        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importFolder(java.lang.String,long)>($r4, $l1);

     label3:
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label4:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("game");

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<cz.romario.opensudoku.db.SudokuImportParams: void clear()>();

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "created");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r4, $l1);

        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long created> = $l1;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "state");

        $l1 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r4, 1L);

        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long state> = $l1;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "time");

        $l1 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r4, 0L);

        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long time> = $l1;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "last_played");

        $l1 = specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: long parseLong(java.lang.String,long)>($r4, 0L);

        $r2.<cz.romario.opensudoku.db.SudokuImportParams: long lastPlayed> = $l1;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "data");

        $r2.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data> = $r4;

        $r4 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "note");

        $r2.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String note> = $r4;

        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importGame(cz.romario.opensudoku.db.SudokuImportParams)>($r2);

        goto label3;

     label5:
        if $i0 != 3 goto label6;

        $r3 = "";

        goto label3;

     label6:
        if $i0 != 4 goto label3;

        virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("name");

        methodCount = <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(2);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label7;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(2, flagInteger);

     label7:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        goto label3;
    }

    private void importXml(java.io.Reader) throws cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        java.io.Reader $r1;
        java.io.BufferedReader $r2;
        org.xmlpull.v1.XmlPullParserFactory $r3;
        org.xmlpull.v1.XmlPullParser $r4;
        int $i0, visitedCount, flagInt;
        java.lang.String $r5;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r6;
        java.lang.RuntimeException $r7;
        java.io.IOException $r8;
        android.content.Context $r9;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;

        $r1 := @parameter0: java.io.Reader;

        $r2 = new java.io.BufferedReader;

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label01:
        $r3 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(0);

        $r4 = virtualinvoke $r3.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r2);

        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        if $i0 != 1 goto label03;

        return;

     label03:
        if $i0 != 2 goto label04;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("opensudoku");

        if $z0 == 0 goto label12;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        if $r5 != null goto label06;

        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importV1(org.xmlpull.v1.XmlPullParser)>($r4);

     label04:
        $i0 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        goto label02;

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z0 == 0 goto label09;

        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importV2(org.xmlpull.v1.XmlPullParser)>($r4);

     label07:
        goto label04;

     label08:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label09:
        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void setError(java.lang.String)>("Unknown version of data.");

     label10:
        goto label04;

     label11:
        $r8 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label12:
        $r9 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.content.Context mContext>;

     label13:
        $r5 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int)>(2131296352);

        virtualinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void setError(java.lang.String)>($r5);

     label14:
        methodCount = <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(3);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label15;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(3, flagInteger);

     label15:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label05 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label08;
        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label08;
        catch java.io.IOException from label13 to label14 with label11;
    }

    private long parseLong(java.lang.String, long)
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        java.lang.String $r1;
        long $l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;

        $r1 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        if $r1 == null goto label1;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

        return $l0;

     label1:
        methodCount = <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(4);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(4, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $l0;
    }

    protected void processImport() throws cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.gui.importing.OpenSudokuImportTask $r0;
        java.net.URI $r1;
        android.net.Uri $r2;
        java.lang.String $r3, $r8, $r9;
        boolean $z0;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        java.io.InputStreamReader $r6;
        java.io.InputStream $r7;
        java.net.URL $r10;
        java.lang.Throwable $r11;
        java.net.MalformedURLException $r12;
        java.lang.RuntimeException $r13;
        java.io.IOException $r14;
        java.net.URISyntaxException $r15;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.importing.OpenSudokuImportTask;

        $r2 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;

     label01:
        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("content");

     label02:
        if $z0 == 0 goto label09;

     label03:
        $r4 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

     label04:
        $r6 = new java.io.InputStreamReader;

     label05:
        $r2 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;

        $r7 = virtualinvoke $r5.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r2);

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7);

     label06:
        specialinvoke $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: void importXml(java.io.Reader)>($r6);

     label07:
        virtualinvoke $r6.<java.io.InputStreamReader: void close()>();

     label08:
        return;

     label09:
        $r1 = new java.net.URI;

     label10:
        $r2 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $r2 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;

        $r8 = virtualinvoke $r2.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $r2 = $r0.<cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: android.net.Uri mUri>;

        $r9 = virtualinvoke $r2.<android.net.Uri: java.lang.String getFragment()>();

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r8, $r9);

        $r6 = new java.io.InputStreamReader;

        $r10 = virtualinvoke $r1.<java.net.URI: java.net.URL toURL()>();

        $r7 = virtualinvoke $r10.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7);

     label11:
        goto label06;

     label12:
        $r11 := @caughtexception;

        virtualinvoke $r6.<java.io.InputStreamReader: void close()>();

        throw $r11;

     label13:
        $r12 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label14:
        $r14 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r14);

        throw $r13;

     label15:
        $r15 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        methodCount = <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(5);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label16;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(5, flagInteger);

     label16:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        throw $r13;

        catch java.net.MalformedURLException from label01 to label02 with label13;
        catch java.net.MalformedURLException from label03 to label04 with label13;
        catch java.net.MalformedURLException from label05 to label06 with label13;
        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.net.URISyntaxException from label01 to label02 with label15;
        catch java.net.URISyntaxException from label03 to label04 with label15;
        catch java.net.URISyntaxException from label05 to label06 with label15;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.net.MalformedURLException from label07 to label08 with label13;
        catch java.net.MalformedURLException from label10 to label11 with label13;
        catch java.net.MalformedURLException from label12 to label13 with label13;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.net.URISyntaxException from label07 to label08 with label15;
        catch java.net.URISyntaxException from label10 to label11 with label15;
        catch java.net.URISyntaxException from label12 to label13 with label15;
    }

    static void <clinit>()
    {
        java.util.LinkedList methodCountListLocal;
        java.lang.Object linkedListobject;

        methodCountListLocal = <com.app.test.AppDir: java.util.LinkedList linkedList>;

        linkedListobject = virtualinvoke methodCountListLocal.<java.util.LinkedList: java.lang.Object clone()>();

        methodCountListLocal = (java.util.LinkedList) linkedListobject;

        <cz.romario.opensudoku.gui.importing.OpenSudokuImportTask: java.util.LinkedList methodCountList> = methodCountListLocal;

        return;
    }
}
