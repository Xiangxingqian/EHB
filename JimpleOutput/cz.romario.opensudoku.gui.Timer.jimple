abstract class cz.romario.opensudoku.gui.Timer extends android.os.Handler
{
    private long mAccumTime;
    private boolean mIsRunning;
    private long mLastLogTime;
    private long mNextTime;
    private int mTickCount;
    private long mTickInterval;
    private final java.lang.Runnable runner;
    public static java.util.LinkedList methodCountList;

    public void <init>(long)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long $l0;
        cz.romario.opensudoku.gui.Timer$1 $r1;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        $l0 := @parameter0: long;

        specialinvoke $r0.<android.os.Handler: void <init>()>();

        $r1 = new cz.romario.opensudoku.gui.Timer$1;

        specialinvoke $r1.<cz.romario.opensudoku.gui.Timer$1: void <init>(cz.romario.opensudoku.gui.Timer)>($r0);

        $r0.<cz.romario.opensudoku.gui.Timer: java.lang.Runnable runner> = $r1;

        $r0.<cz.romario.opensudoku.gui.Timer: long mTickInterval> = 0L;

        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = 0;

        $r0.<cz.romario.opensudoku.gui.Timer: long mTickInterval> = $l0;

        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = 0;

        $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime> = 0L;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(0);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(0, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$0(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        boolean z0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        z0 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(1);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(1, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return z0;
    }

    static long access$1(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(2);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(2, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return l0;
    }

    static java.lang.Runnable access$10(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        java.lang.Runnable r1;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        r1 = $r0.<cz.romario.opensudoku.gui.Timer: java.lang.Runnable runner>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(3);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(3, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return r1;
    }

    static void access$11(cz.romario.opensudoku.gui.Timer, boolean)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        boolean $z0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        $z0 := @parameter1: boolean;

        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = $z0;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(4);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(4, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static long access$2(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(5);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(5, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return l0;
    }

    static void access$3(cz.romario.opensudoku.gui.Timer, long)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long $l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        $l0 := @parameter1: long;

        $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime> = $l0;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(6);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(6, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$4(cz.romario.opensudoku.gui.Timer, long)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long $l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        $l0 := @parameter1: long;

        $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime> = $l0;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(7);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(7, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static int access$5(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        int i0, visitedCount, flagInt;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        i0 = $r0.<cz.romario.opensudoku.gui.Timer: int mTickCount>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(8);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(8, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return i0;
    }

    static void access$6(cz.romario.opensudoku.gui.Timer, int)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        int $i0, visitedCount, flagInt;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        $i0 := @parameter1: int;

        $r0.<cz.romario.opensudoku.gui.Timer: int mTickCount> = $i0;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(9);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(9, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static long access$7(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mNextTime>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(10);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(10, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return l0;
    }

    static long access$8(cz.romario.opensudoku.gui.Timer)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mTickInterval>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(11);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(11, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return l0;
    }

    static void access$9(cz.romario.opensudoku.gui.Timer, long)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long $l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @parameter0: cz.romario.opensudoku.gui.Timer;

        $l0 := @parameter1: long;

        $r0.<cz.romario.opensudoku.gui.Timer: long mNextTime> = $l0;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(12);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(12, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    protected void done()
    {
        cz.romario.opensudoku.gui.Timer $r0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(13);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(13, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public final long getTime()
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long l0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(14);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(14, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return l0;
    }

    public final boolean isRunning()
    {
        cz.romario.opensudoku.gui.Timer $r0;
        boolean z0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        z0 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(15);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(15, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return z0;
    }

    public final void reset()
    {
        cz.romario.opensudoku.gui.Timer $r0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        virtualinvoke $r0.<cz.romario.opensudoku.gui.Timer: void stop()>();

        $r0.<cz.romario.opensudoku.gui.Timer: int mTickCount> = 0;

        $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime> = 0L;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(16);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(16, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    boolean restoreState(android.os.Bundle)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        android.os.Bundle $r1;
        boolean $z0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        $r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke $r0.<cz.romario.opensudoku.gui.Timer: boolean restoreState(android.os.Bundle,boolean)>($r1, 1);

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(17);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(17, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $z0;
    }

    boolean restoreState(android.os.Bundle, boolean)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        android.os.Bundle $r1;
        boolean $z0, $z1;
        long $l0;
        int $i1, visitedCount, flagInt;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        $r1 := @parameter0: android.os.Bundle;

        $z0 := @parameter1: boolean;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("tickInterval");

        $r0.<cz.romario.opensudoku.gui.Timer: long mTickInterval> = $l0;

        $z1 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("isRunning");

        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = $z1;

        $i1 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String)>("tickCount");

        $r0.<cz.romario.opensudoku.gui.Timer: int mTickCount> = $i1;

        $l0 = virtualinvoke $r1.<android.os.Bundle: long getLong(java.lang.String)>("accumTime");

        $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime> = $l0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime> = $l0;

        $z1 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        if $z1 == 0 goto label1;

        if $z0 == 0 goto label2;

        virtualinvoke $r0.<cz.romario.opensudoku.gui.Timer: void start()>();

     label1:
        return 1;

     label2:
        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = 0;

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(18);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label3;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(18, flagInteger);

     label3:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        goto label1;
    }

    void saveState(android.os.Bundle)
    {
        cz.romario.opensudoku.gui.Timer $r0;
        android.os.Bundle $r1;
        long $l0, $l1, $l2;
        boolean $z0;
        int $i3, visitedCount, flagInt;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        $r1 := @parameter0: android.os.Bundle;

        $z0 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime>;

        $l2 = $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime>;

        $l2 = $l0 - $l2;

        $l1 = $l1 + $l2;

        $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime> = $l1;

        $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime> = $l0;

     label1:
        $l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mTickInterval>;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("tickInterval", $l0);

        $z0 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("isRunning", $z0);

        $i3 = $r0.<cz.romario.opensudoku.gui.Timer: int mTickCount>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("tickCount", $i3);

        $l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime>;

        virtualinvoke $r1.<android.os.Bundle: void putLong(java.lang.String,long)>("accumTime", $l0);

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(19);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(19, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void start()
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long $l0;
        boolean $z0;
        java.lang.Runnable $r1;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        $z0 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = 1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime> = $l0;

        $r0.<cz.romario.opensudoku.gui.Timer: long mNextTime> = $l0;

        $r1 = $r0.<cz.romario.opensudoku.gui.Timer: java.lang.Runnable runner>;

        $l0 = $r0.<cz.romario.opensudoku.gui.Timer: long mNextTime>;

        virtualinvoke $r0.<cz.romario.opensudoku.gui.Timer: boolean postAtTime(java.lang.Runnable,long)>($r1, $l0);

        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(20);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(20, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    protected abstract boolean step(int, long);

    public void stop()
    {
        cz.romario.opensudoku.gui.Timer $r0;
        long $l0, $l1, $l2;
        boolean $z0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.Timer;

        $z0 = $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning>;

        if $z0 == 0 goto label1;

        $r0.<cz.romario.opensudoku.gui.Timer: boolean mIsRunning> = 0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime>;

        $l2 = $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime>;

        $l2 = $l0 - $l2;

        $l1 = $l1 + $l2;

        $r0.<cz.romario.opensudoku.gui.Timer: long mAccumTime> = $l1;

        $r0.<cz.romario.opensudoku.gui.Timer: long mLastLogTime> = $l0;

        return;

     label1:
        methodCount = <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(21);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(21, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.LinkedList methodCountListLocal;
        java.lang.Object linkedListobject;

        methodCountListLocal = <com.app.test.AppDir: java.util.LinkedList linkedList>;

        linkedListobject = virtualinvoke methodCountListLocal.<java.util.LinkedList: java.lang.Object clone()>();

        methodCountListLocal = (java.util.LinkedList) linkedListobject;

        <cz.romario.opensudoku.gui.Timer: java.util.LinkedList methodCountList> = methodCountListLocal;

        return;
    }
}
