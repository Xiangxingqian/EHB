public class cz.romario.opensudoku.db.SudokuDatabase extends java.lang.Object
{
    public static final java.lang.String DATABASE_NAME;
    public static final java.lang.String FOLDER_TABLE_NAME;
    private static final java.lang.String INBOX_FOLDER_NAME;
    public static final java.lang.String SUDOKU_TABLE_NAME;
    private android.database.sqlite.SQLiteStatement mInsertSudokuStatement;
    private cz.romario.opensudoku.db.DatabaseHelper mOpenHelper;
    public static java.util.LinkedList methodCountList;

    public void <init>(android.content.Context)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        android.content.Context $r1;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new cz.romario.opensudoku.db.DatabaseHelper;

        specialinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: void <init>(android.content.Context)>($r1);

        $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper> = $r2;

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(0);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(0, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void beginTransaction()
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(1);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(1, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void close()
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        android.database.sqlite.SQLiteStatement $r1;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        if $r1 == null goto label1;

        $r1 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteStatement: void close()>();

     label1:
        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: void close()>();

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(2);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(2, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void deleteFolder(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        cz.romario.opensudoku.db.DatabaseHelper $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r2 = virtualinvoke $r1.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("folder_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("sudoku", $r4, null);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("folder", $r4, null);

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(3);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(3, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void deleteSudoku(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        cz.romario.opensudoku.db.DatabaseHelper $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r2 = virtualinvoke $r1.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("sudoku", $r4, null);

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(4);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(4, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void endTransaction()
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(5);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(5, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public android.database.Cursor exportFolder(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        java.lang.String $r1, $r6;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        android.database.sqlite.SQLiteDatabase $r3;
        byte $b1;
        java.lang.StringBuilder $r4;
        java.lang.String[] $r5;
        android.database.Cursor $r7;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = "select f._id as folder_id, f.name as folder_name, f.created as folder_created, s.created, s.state, s.time, s.last_played, s.data, s.puzzle_note from folder f left outer join sudoku s on f._id = s.folder_id";

        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r3 = virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("select f._id as folder_id, f.name as folder_name, f.created as folder_created, s.created, s.state, s.time, s.last_played, s.data, s.puzzle_note from folder f left outer join sudoku s on f._id = s.folder_id");

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where f._id = ?");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label3;

        $r5 = newarray (java.lang.String)[1];

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r5[0] = $r6;

     label2:
        $r7 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r1, $r5);

        return $r7;

     label3:
        $r5 = null;

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(6);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label4;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(6, flagInteger);

     label4:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        goto label2;
    }

    public android.database.Cursor exportSudoku(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        cz.romario.opensudoku.db.DatabaseHelper $r1;
        android.database.sqlite.SQLiteDatabase $r2;
        java.lang.String[] $r3;
        java.lang.String $r4;
        android.database.Cursor $r5;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r2 = virtualinvoke $r1.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r3 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r3[0] = $r4;

        $r5 = virtualinvoke $r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select f._id as folder_id, f.name as folder_name, f.created as folder_created, s.created, s.state, s.time, s.last_played, s.data, s.puzzle_note from sudoku s inner join folder f on s.folder_id = f._id where s._id = ?", $r3);

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(7);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(7, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $r5;
    }

    public cz.romario.opensudoku.game.FolderInfo findFolder(java.lang.String)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        java.lang.String $r1;
        android.database.sqlite.SQLiteQueryBuilder $r2;
        cz.romario.opensudoku.game.FolderInfo $r3;
        android.database.Cursor $r4, $r8;
        cz.romario.opensudoku.db.DatabaseHelper $r5;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.String[] $r7;
        boolean $z0;
        int $i0, visitedCount, flagInt;
        long $l1;
        java.lang.Throwable $r9;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("folder");

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>("name = ?");

        $r4 = null;

     label1:
        $r5 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r6 = virtualinvoke $r5.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = $r1;

        $r8 = virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, null, null, $r7, null, null, null);

        $r4 = $r8;

        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l1 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i0);

        $i0 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r1 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r3 = new cz.romario.opensudoku.game.FolderInfo;

        specialinvoke $r3.<cz.romario.opensudoku.game.FolderInfo: void <init>()>();

        $r3.<cz.romario.opensudoku.game.FolderInfo: long id> = $l1;

        $r3.<cz.romario.opensudoku.game.FolderInfo: java.lang.String name> = $r1;

     label2:
        if $r8 == null goto label6;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return $r3;

     label3:
        if $r8 == null goto label7;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return null;

     label4:
        $r9 := @caughtexception;

        if $r4 == null goto label5;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label5:
        throw $r9;

     label6:
        return $r3;

     label7:
        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(8);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label8;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(8, flagInteger);

     label8:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return null;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public cz.romario.opensudoku.game.FolderInfo getFolderInfo(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        android.database.sqlite.SQLiteQueryBuilder $r1;
        cz.romario.opensudoku.game.FolderInfo $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        android.database.Cursor $r5, $r8;
        cz.romario.opensudoku.db.DatabaseHelper $r6;
        android.database.sqlite.SQLiteDatabase $r7;
        boolean $z0;
        int $i1, visitedCount, flagInt;
        java.lang.Throwable $r9;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("folder");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>($r4);

        $r5 = null;

     label1:
        $r6 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r7 = virtualinvoke $r6.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r8 = virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, null, null, null, null, null, null);

        $r5 = $r8;

        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l0 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i1);

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r4 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $r2 = new cz.romario.opensudoku.game.FolderInfo;

        specialinvoke $r2.<cz.romario.opensudoku.game.FolderInfo: void <init>()>();

        $r2.<cz.romario.opensudoku.game.FolderInfo: long id> = $l0;

        $r2.<cz.romario.opensudoku.game.FolderInfo: java.lang.String name> = $r4;

     label2:
        if $r8 == null goto label6;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return $r2;

     label3:
        if $r8 == null goto label7;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return null;

     label4:
        $r9 := @caughtexception;

        if $r5 == null goto label5;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label5:
        throw $r9;

     label6:
        return $r2;

     label7:
        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(9);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label8;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(9, flagInteger);

     label8:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return null;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public cz.romario.opensudoku.game.FolderInfo getFolderInfoFull(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        android.database.Cursor $r1, $r6;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        cz.romario.opensudoku.game.FolderInfo $r7;
        boolean $z0;
        int $i1, $i2, $i3, visitedCount, flagInt;
        java.lang.Throwable $r8;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = null;

     label01:
        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r3 = virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("select folder._id as _id, folder.name as name, sudoku.state as state, count(sudoku.state) as count from folder left join sudoku on folder._id = sudoku.folder_id where folder._id = ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" group by sudoku.state");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r5, null);

     label02:
        $r1 = $r6;

        $r7 = null;

     label03:
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 != 0 goto label05;

        if $r6 == null goto label14;

        interfaceinvoke $r6.<android.database.Cursor: void close()>();

        return $r7;

     label05:
        $i1 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l0 = interfaceinvoke $r6.<android.database.Cursor: long getLong(int)>($i1);

        $i1 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        $r5 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("state");

        $i1 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i1);

        $i2 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndex(java.lang.String)>("count");

        $i2 = interfaceinvoke $r6.<android.database.Cursor: int getInt(int)>($i2);

        if $r7 != null goto label13;

        $r7 = new cz.romario.opensudoku.game.FolderInfo;

        specialinvoke $r7.<cz.romario.opensudoku.game.FolderInfo: void <init>(long,java.lang.String)>($l0, $r5);

     label06:
        $i3 = $r7.<cz.romario.opensudoku.game.FolderInfo: int puzzleCount>;

        $i3 = $i3 + $i2;

        $r7.<cz.romario.opensudoku.game.FolderInfo: int puzzleCount> = $i3;

        if $i1 != 2 goto label07;

        $i3 = $r7.<cz.romario.opensudoku.game.FolderInfo: int solvedCount>;

        $i3 = $i3 + $i2;

        $r7.<cz.romario.opensudoku.game.FolderInfo: int solvedCount> = $i3;

     label07:
        if $i1 != 0 goto label08;

        $i1 = $r7.<cz.romario.opensudoku.game.FolderInfo: int playingCount>;

        $i1 = $i1 + $i2;

        $r7.<cz.romario.opensudoku.game.FolderInfo: int playingCount> = $i1;

     label08:
        goto label03;

     label09:
        $r8 := @caughtexception;

     label10:
        if $r1 == null goto label11;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label11:
        throw $r8;

     label12:
        $r8 := @caughtexception;

        goto label10;

     label13:
        goto label06;

     label14:
        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(10);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label15;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(10, flagInteger);

     label15:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label08 with label09;
    }

    public android.database.Cursor getFolderList()
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        android.database.sqlite.SQLiteQueryBuilder $r1;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        android.database.sqlite.SQLiteDatabase $r3;
        android.database.Cursor $r4;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("folder");

        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r3 = virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r4 = virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r3, null, null, null, null, null, "created ASC");

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(11);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(11, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $r4;
    }

    public cz.romario.opensudoku.game.FolderInfo getInboxFolder()
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        cz.romario.opensudoku.game.FolderInfo $r1;
        long $l0;
        java.lang.Long $r2;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 = virtualinvoke $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.game.FolderInfo findFolder(java.lang.String)>("Inbox");

        if $r1 == null goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1 = virtualinvoke $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.game.FolderInfo insertFolder(java.lang.String,java.lang.Long)>("Inbox", $r2);

        return $r1;

     label1:
        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(12);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(12, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $r1;
    }

    public cz.romario.opensudoku.game.SudokuGame getSudoku(long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0, $l2, $l3, $l5;
        android.database.sqlite.SQLiteQueryBuilder $r1;
        cz.romario.opensudoku.game.SudokuGame $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r9;
        android.database.Cursor $r5, $r8;
        cz.romario.opensudoku.db.DatabaseHelper $r6;
        android.database.sqlite.SQLiteDatabase $r7;
        boolean $z0;
        int $i1, $i4, visitedCount, flagInt;
        cz.romario.opensudoku.game.CellCollection $r10;
        java.lang.Throwable $r11;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("sudoku");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>($r4);

        $r5 = null;

        $r2 = null;

     label1:
        $r6 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r7 = virtualinvoke $r6.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r8 = virtualinvoke $r1.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r7, null, null, null, null, null, null);

        $r5 = $r8;

        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        $l0 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i1);

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("created");

        $l2 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i1);

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("data");

        $r4 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>($i1);

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("last_played");

        $l3 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i1);

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("state");

        $i1 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>($i1);

        $i4 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("time");

        $l5 = interfaceinvoke $r8.<android.database.Cursor: long getLong(int)>($i4);

        $i4 = interfaceinvoke $r8.<android.database.Cursor: int getColumnIndex(java.lang.String)>("puzzle_note");

        $r9 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>($i4);

        $r2 = new cz.romario.opensudoku.game.SudokuGame;

        specialinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void <init>()>();

     label2:
        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setId(long)>($l0);

        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setCreated(long)>($l2);

        $r10 = staticinvoke <cz.romario.opensudoku.game.CellCollection: cz.romario.opensudoku.game.CellCollection deserialize(java.lang.String)>($r4);

        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setCells(cz.romario.opensudoku.game.CellCollection)>($r10);

        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setLastPlayed(long)>($l3);

        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setState(int)>($i1);

        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setTime(long)>($l5);

        virtualinvoke $r2.<cz.romario.opensudoku.game.SudokuGame: void setNote(java.lang.String)>($r9);

     label3:
        if $r8 == null goto label8;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return $r2;

     label4:
        $r11 := @caughtexception;

     label5:
        if $r5 == null goto label6;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label6:
        throw $r11;

     label7:
        $r11 := @caughtexception;

        goto label5;

     label8:
        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(13);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label9;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(13, flagInteger);

     label9:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label7;
    }

    public android.database.Cursor getSudokuList(long, cz.romario.opensudoku.gui.SudokuListFilter)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        cz.romario.opensudoku.gui.SudokuListFilter $r1;
        android.database.sqlite.SQLiteQueryBuilder $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;
        cz.romario.opensudoku.db.DatabaseHelper $r5;
        android.database.sqlite.SQLiteDatabase $r6;
        android.database.Cursor $r7;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 := @parameter1: cz.romario.opensudoku.gui.SudokuListFilter;

        $r2 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("sudoku");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("folder_id=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>($r4);

        if $r1 == null goto label3;

        $z0 = $r1.<cz.romario.opensudoku.gui.SudokuListFilter: boolean showStateCompleted>;

        if $z0 != 0 goto label1;

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>(" and state!=2");

     label1:
        $z0 = $r1.<cz.romario.opensudoku.gui.SudokuListFilter: boolean showStateNotStarted>;

        if $z0 != 0 goto label2;

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>(" and state!=1");

     label2:
        $z0 = $r1.<cz.romario.opensudoku.gui.SudokuListFilter: boolean showStatePlaying>;

        if $z0 != 0 goto label3;

        virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>(" and state!=0");

     label3:
        $r5 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r6 = virtualinvoke $r5.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        $r7 = virtualinvoke $r2.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>($r6, null, null, null, null, null, "created DESC");

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(14);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label4;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(14, flagInteger);

     label4:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return $r7;
    }

    public long importSudoku(long, cz.romario.opensudoku.db.SudokuImportParams) throws cz.romario.opensudoku.db.SudokuInvalidFormatException
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        cz.romario.opensudoku.db.SudokuImportParams $r1;
        java.lang.String $r2;
        cz.romario.opensudoku.db.SudokuInvalidFormatException $r3;
        int $i1, visitedCount, flagInt;
        boolean $z0;
        android.database.sqlite.SQLiteStatement $r4;
        cz.romario.opensudoku.db.DatabaseHelper $r5;
        android.database.sqlite.SQLiteDatabase $r6;
        byte $b2;
        android.database.SQLException $r7;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 := @parameter1: cz.romario.opensudoku.db.SudokuImportParams;

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data>;

        if $r2 != null goto label1;

        $r3 = new cz.romario.opensudoku.db.SudokuInvalidFormatException;

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data>;

        specialinvoke $r3.<cz.romario.opensudoku.db.SudokuInvalidFormatException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data>;

        $i1 = <cz.romario.opensudoku.game.CellCollection: int DATA_VERSION_PLAIN>;

        $z0 = staticinvoke <cz.romario.opensudoku.game.CellCollection: boolean isValid(java.lang.String,int)>($r2, $i1);

        if $z0 != 0 goto label2;

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data>;

        $i1 = <cz.romario.opensudoku.game.CellCollection: int DATA_VERSION_1>;

        $z0 = staticinvoke <cz.romario.opensudoku.game.CellCollection: boolean isValid(java.lang.String,int)>($r2, $i1);

        if $z0 != 0 goto label2;

        $r3 = new cz.romario.opensudoku.db.SudokuInvalidFormatException;

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data>;

        specialinvoke $r3.<cz.romario.opensudoku.db.SudokuInvalidFormatException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label2:
        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        if $r4 != null goto label3;

        $r5 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r6 = virtualinvoke $r5.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r4 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>("insert into sudoku (folder_id, created, state, time, last_played, data, puzzle_note) values (?, ?, ?, ?, ?, ?, ?)");

        $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement> = $r4;

     label3:
        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(1, $l0);

        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $l0 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: long created>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(2, $l0);

        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $l0 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: long state>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(3, $l0);

        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $l0 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: long time>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(4, $l0);

        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $l0 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: long lastPlayed>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindLong(int,long)>(5, $l0);

        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(6, $r2);

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String note>;

        if $r2 != null goto label5;

        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindNull(int)>(7);

     label4:
        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $l0 = virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: long executeInsert()>();

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label6;

        return $l0;

     label5:
        $r4 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: android.database.sqlite.SQLiteStatement mInsertSudokuStatement>;

        $r2 = $r1.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String note>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteStatement: void bindString(int,java.lang.String)>(7, $r2);

        goto label4;

     label6:
        $r7 = new android.database.SQLException;

        specialinvoke $r7.<android.database.SQLException: void <init>(java.lang.String)>("Failed to insert sudoku.");

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(15);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label7;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(15, flagInteger);

     label7:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        throw $r7;
    }

    public cz.romario.opensudoku.game.FolderInfo insertFolder(java.lang.String, java.lang.Long)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        java.lang.String $r1;
        java.lang.Long $r2;
        cz.romario.opensudoku.game.FolderInfo $r3;
        android.content.ContentValues $r4;
        cz.romario.opensudoku.db.DatabaseHelper $r5;
        android.database.sqlite.SQLiteDatabase $r6;
        long $l0;
        byte $b1;
        android.database.SQLException $r7;
        java.lang.Object[] $r8;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Long;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("created", $r2);

        virtualinvoke $r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r1);

        $r5 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r6 = virtualinvoke $r5.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $l0 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("folder", "_id", $r4);

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $r3 = new cz.romario.opensudoku.game.FolderInfo;

        specialinvoke $r3.<cz.romario.opensudoku.game.FolderInfo: void <init>()>();

        $r3.<cz.romario.opensudoku.game.FolderInfo: long id> = $l0;

        $r3.<cz.romario.opensudoku.game.FolderInfo: java.lang.String name> = $r1;

        return $r3;

     label1:
        $r7 = new android.database.SQLException;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to insert folder \'%s\'.", $r8);

        specialinvoke $r7.<android.database.SQLException: void <init>(java.lang.String)>($r1);

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(16);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(16, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        throw $r7;
    }

    public long insertSudoku(long, cz.romario.opensudoku.game.SudokuGame)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0, $l1;
        cz.romario.opensudoku.game.SudokuGame $r1;
        android.content.ContentValues $r2;
        cz.romario.opensudoku.db.DatabaseHelper $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        cz.romario.opensudoku.game.CellCollection $r5;
        java.lang.String $r6;
        java.lang.Long $r7;
        int $i2, visitedCount, flagInt;
        java.lang.Integer $r8, flagInteger;
        byte $b3;
        android.database.SQLException $r9;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 := @parameter1: cz.romario.opensudoku.game.SudokuGame;

        $r3 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r4 = virtualinvoke $r3.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        $r5 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection getCells()>();

        $r6 = virtualinvoke $r5.<cz.romario.opensudoku.game.CellCollection: java.lang.String serialize()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("data", $r6);

        $l1 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: long getCreated()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("created", $r7);

        $l1 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: long getLastPlayed()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("last_played", $r7);

        $i2 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: int getState()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r8);

        $l1 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: long getTime()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("time", $r7);

        $r6 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: java.lang.String getNote()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("puzzle_note", $r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("folder_id", $r7);

        $l0 = virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("sudoku", "name", $r2);

        $b3 = $l0 cmp 0L;

        if $b3 <= 0 goto label1;

        return $l0;

     label1:
        $r9 = new android.database.SQLException;

        specialinvoke $r9.<android.database.SQLException: void <init>(java.lang.String)>("Failed to insert sudoku.");

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(17);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label2;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(17, flagInteger);

     label2:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        throw $r9;
    }

    public void setTransactionSuccessful()
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        cz.romario.opensudoku.db.DatabaseHelper $r2;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r2 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r1 = virtualinvoke $r2.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(18);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(18, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void updateFolder(long, java.lang.String)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        long $l0;
        java.lang.String $r1;
        android.content.ContentValues $r2;
        cz.romario.opensudoku.db.DatabaseHelper $r3;
        android.database.sqlite.SQLiteDatabase $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.String;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r1);

        $r3 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r4 = virtualinvoke $r3.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("folder", $r2, $r1, null);

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(19);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(19, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void updateSudoku(cz.romario.opensudoku.game.SudokuGame)
    {
        cz.romario.opensudoku.db.SudokuDatabase $r0;
        cz.romario.opensudoku.game.SudokuGame $r1;
        android.content.ContentValues $r2;
        cz.romario.opensudoku.game.CellCollection $r3;
        java.lang.String $r4;
        long $l0;
        java.lang.Long $r5;
        int $i1, visitedCount, flagInt;
        java.lang.Integer $r6, flagInteger;
        cz.romario.opensudoku.db.DatabaseHelper $r7;
        android.database.sqlite.SQLiteDatabase $r8;
        java.lang.StringBuilder $r9;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;

        $r0 := @this: cz.romario.opensudoku.db.SudokuDatabase;

        $r1 := @parameter0: cz.romario.opensudoku.game.SudokuGame;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        $r3 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: cz.romario.opensudoku.game.CellCollection getCells()>();

        $r4 = virtualinvoke $r3.<cz.romario.opensudoku.game.CellCollection: java.lang.String serialize()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("data", $r4);

        $l0 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: long getLastPlayed()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("last_played", $r5);

        $i1 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: int getState()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r6);

        $l0 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: long getTime()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("time", $r5);

        $r4 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: java.lang.String getNote()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("puzzle_note", $r4);

        $r7 = $r0.<cz.romario.opensudoku.db.SudokuDatabase: cz.romario.opensudoku.db.DatabaseHelper mOpenHelper>;

        $r8 = virtualinvoke $r7.<cz.romario.opensudoku.db.DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("_id=");

        $l0 = virtualinvoke $r1.<cz.romario.opensudoku.game.SudokuGame: long getId()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("sudoku", $r2, $r4, null);

        methodCount = <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(20);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(20, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.LinkedList methodCountListLocal;
        java.lang.Object linkedListobject;

        <cz.romario.opensudoku.db.SudokuDatabase: java.lang.String SUDOKU_TABLE_NAME> = "sudoku";

        <cz.romario.opensudoku.db.SudokuDatabase: java.lang.String INBOX_FOLDER_NAME> = "Inbox";

        <cz.romario.opensudoku.db.SudokuDatabase: java.lang.String FOLDER_TABLE_NAME> = "folder";

        <cz.romario.opensudoku.db.SudokuDatabase: java.lang.String DATABASE_NAME> = "opensudoku";

        methodCountListLocal = <com.app.test.AppDir: java.util.LinkedList linkedList>;

        linkedListobject = virtualinvoke methodCountListLocal.<java.util.LinkedList: java.lang.Object clone()>();

        methodCountListLocal = (java.util.LinkedList) linkedListobject;

        <cz.romario.opensudoku.db.SudokuDatabase: java.util.LinkedList methodCountList> = methodCountListLocal;

        return;
    }
}
