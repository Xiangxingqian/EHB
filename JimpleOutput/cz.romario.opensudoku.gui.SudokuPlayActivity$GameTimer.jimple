final class cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer extends cz.romario.opensudoku.gui.Timer
{
    final cz.romario.opensudoku.gui.SudokuPlayActivity this$0;
    public static java.util.LinkedList methodCountList;

    void <init>(cz.romario.opensudoku.gui.SudokuPlayActivity)
    {
        cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer $r0;
        cz.romario.opensudoku.gui.SudokuPlayActivity $r1;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer;

        $r1 := @parameter0: cz.romario.opensudoku.gui.SudokuPlayActivity;

        $r0.<cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: cz.romario.opensudoku.gui.SudokuPlayActivity this$0> = $r1;

        specialinvoke $r0.<cz.romario.opensudoku.gui.Timer: void <init>(long)>(1000L);

        methodCount = <cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(0);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(0, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    protected boolean step(int, long)
    {
        cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer $r0;
        int $i0, visitedCount, flagInt;
        long $l1;
        cz.romario.opensudoku.gui.SudokuPlayActivity $r1;
        java.lang.Object invalid, flagObj;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = $r0.<cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: cz.romario.opensudoku.gui.SudokuPlayActivity this$0>;

        virtualinvoke $r1.<cz.romario.opensudoku.gui.SudokuPlayActivity: void updateTime()>();

        methodCount = <cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(1);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(1, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return 0;
    }

    static void <clinit>()
    {
        java.util.LinkedList methodCountListLocal;
        java.lang.Object linkedListobject;

        methodCountListLocal = <com.app.test.AppDir: java.util.LinkedList linkedList>;

        linkedListobject = virtualinvoke methodCountListLocal.<java.util.LinkedList: java.lang.Object clone()>();

        methodCountListLocal = (java.util.LinkedList) linkedListobject;

        <cz.romario.opensudoku.gui.SudokuPlayActivity$GameTimer: java.util.LinkedList methodCountList> = methodCountListLocal;

        return;
    }
}
