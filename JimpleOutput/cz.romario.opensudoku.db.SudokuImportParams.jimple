public class cz.romario.opensudoku.db.SudokuImportParams extends java.lang.Object
{
    public long created;
    public java.lang.String data;
    public long lastPlayed;
    public java.lang.String note;
    public long state;
    public long time;
    public static java.util.LinkedList methodCountList;

    public void <init>()
    {
        cz.romario.opensudoku.db.SudokuImportParams $r0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuImportParams;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        methodCount = <cz.romario.opensudoku.db.SudokuImportParams: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(0);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(0, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    public void clear()
    {
        cz.romario.opensudoku.db.SudokuImportParams $r0;
        java.lang.Object invalid, flagObj;
        int visitedCount, flagInt;
        java.util.LinkedList methodCount;
        java.lang.Integer flagInteger;

        $r0 := @this: cz.romario.opensudoku.db.SudokuImportParams;

        $r0.<cz.romario.opensudoku.db.SudokuImportParams: long created> = 0L;

        $r0.<cz.romario.opensudoku.db.SudokuImportParams: long state> = 1L;

        $r0.<cz.romario.opensudoku.db.SudokuImportParams: long time> = 0L;

        $r0.<cz.romario.opensudoku.db.SudokuImportParams: long lastPlayed> = 0L;

        $r0.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String data> = null;

        $r0.<cz.romario.opensudoku.db.SudokuImportParams: java.lang.String note> = null;

        methodCount = <cz.romario.opensudoku.db.SudokuImportParams: java.util.LinkedList methodCountList>;

        flagObj = virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object get(int)>(1);

        flagInteger = (java.lang.Integer) flagObj;

        flagInt = virtualinvoke flagInteger.<java.lang.Integer: int intValue()>();

        if flagInt != 0 goto label1;

        visitedCount = <com.app.test.AppDir: int visitedMethodCount>;

        visitedCount = visitedCount + 1;

        <com.app.test.AppDir: int visitedMethodCount> = visitedCount;

        flagInteger = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke methodCount.<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>(1, flagInteger);

     label1:
        invalid = new java.lang.Object;

        specialinvoke invalid.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.util.LinkedList methodCountListLocal;
        java.lang.Object linkedListobject;

        methodCountListLocal = <com.app.test.AppDir: java.util.LinkedList linkedList>;

        linkedListobject = virtualinvoke methodCountListLocal.<java.util.LinkedList: java.lang.Object clone()>();

        methodCountListLocal = (java.util.LinkedList) linkedListobject;

        <cz.romario.opensudoku.db.SudokuImportParams: java.util.LinkedList methodCountList> = methodCountListLocal;

        return;
    }
}
