public class com.app.test.event.UIEventHandler extends java.lang.Object
{
    public static final java.lang.String ONEEVENT;
    public static final java.lang.String ONESEQ;
    public static final java.lang.String MANYSEQ;
    public static final int fixSeq;
    public static java.lang.String file;
    public static final java.lang.String itemName;

    static void <clinit>()
    {
        java.lang.String $r0;

        <com.app.test.event.UIEventHandler: java.lang.String itemName> = "uTest";

        <com.app.test.event.UIEventHandler: int fixSeq> = 1;

        <com.app.test.event.UIEventHandler: java.lang.String MANYSEQ> = "manysequence";

        <com.app.test.event.UIEventHandler: java.lang.String ONESEQ> = "onesequence";

        <com.app.test.event.UIEventHandler: java.lang.String ONEEVENT> = "oneevent";

        $r0 = <com.app.test.AppDir: java.lang.String file>;

        <com.app.test.event.UIEventHandler: java.lang.String file> = $r0;

        return;
    }

    public void <init>()
    {
        com.app.test.event.UIEventHandler r0;

        r0 := @this: com.app.test.event.UIEventHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void doUIEventTest(android.app.Activity)
    {
        android.app.Activity r0;
        java.lang.String r1, $r5, $r8, $r9, $r13, $r14, $r17, $r18;
        java.lang.Object r2;
        java.util.LinkedList r3;
        java.lang.Throwable r4, $r16;
        java.lang.Class $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r7, $r12, $r15;
        int $i0, $i2, $i4;
        android.app.ListActivity $r10;
        java.lang.Exception $r11, r20;
        java.lang.reflect.Field r19;

        r0 := @parameter0: android.app.Activity;

        $r5 = <com.app.test.event.UIEventHandler: java.lang.String file>;

        r1 = staticinvoke <com.app.test.event.UIEventHandler: java.lang.String readEHBStgy(java.lang.String)>($r5);

     label1:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r19 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("uieventlinkedlist");

        r2 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r3 = (java.util.LinkedList) r2;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventFromLinkedListTest(java.util.LinkedList,java.lang.String)>(r3, r1);

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventFromMenuTest(android.app.Activity)>(r0);

        $z0 = staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: boolean containsListEvent(android.app.Activity)>(r0);

        if $z0 == 0 goto label2;

        $r10 = (android.app.ListActivity) r0;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventFromListActTest(android.app.ListActivity)>($r10);

     label2:
        $z1 = staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: boolean containsPreferenceAct(android.app.Activity)>(r0);

        if $z1 == 0 goto label7;

        staticinvoke <com.app.test.event.UIEventHandler$UIEventTest: void doUIEventFromPreActTest(android.app.Activity)>(r0);

     label3:
        goto label7;

     label4:
        $r11 := @caughtexception;

        r20 = $r11;

        staticinvoke <com.app.test.Util: void LogException(java.lang.Exception)>(r20);

     label5:
        $r12 = new java.lang.StringBuilder;

        $i2 = <com.app.test.AppDir: int visitedMethodCount>;

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EVENT", $r14);

        goto label8;

     label6:
        $r16 := @caughtexception;

        r4 = $r16;

        $r15 = new java.lang.StringBuilder;

        $i4 = <com.app.test.AppDir: int visitedMethodCount>;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EVENT", $r18);

        throw r4;

     label7:
        $r7 = new java.lang.StringBuilder;

        $i0 = <com.app.test.AppDir: int visitedMethodCount>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EVENT", $r8);

     label8:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static void addMenuItem(android.app.Activity, android.view.Menu)
    {
        android.app.Activity r0;
        android.view.Menu r1;
        android.view.MenuItem r2;
        com.app.test.event.UIEventHandler$1 $r3;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.view.Menu;

        r2 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>("uTest");

        interfaceinvoke r2.<android.view.MenuItem: void setShowAsAction(int)>(0);

        $r3 = new com.app.test.event.UIEventHandler$1;

        specialinvoke $r3.<com.app.test.event.UIEventHandler$1: void <init>(android.app.Activity)>(r0);

        interfaceinvoke r2.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r3);

        return;
    }

    private static java.lang.String readEHBStgy(java.lang.String)
    {
        java.lang.String r0, r11;
        java.io.ObjectInputStream r1, $r4;
        java.lang.Object r2;
        java.io.FileInputStream $r3, r12;
        java.lang.Exception $r10, r13;

        r0 := @parameter0: java.lang.String;

        r11 = "";

     label1:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r12 = $r3;

        $r4 = new java.io.ObjectInputStream;

        specialinvoke $r4.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r12);

        r1 = $r4;

        virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r11 = (java.lang.String) r2;

        virtualinvoke r1.<java.io.ObjectInputStream: void close()>();

        virtualinvoke r12.<java.io.FileInputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r13 = $r10;

        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();

     label4:
        return r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
